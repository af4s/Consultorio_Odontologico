/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.TMAgenda;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Agenda;

/**
 *
 * @author cfreitas
 */
public final class ListaAgendamentos extends javax.swing.JDialog {
    
    private TMAgenda tmAgendamentos;
    private Agenda agendamentoSelecionado;
    private int indiceSelecionado;

    /**
     * Creates new form ListaAgendamentos
     */
    public ListaAgendamentos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.indiceSelecionado = -1;
        this.agendamentoSelecionado = new Agenda();
        this.tmAgendamentos = new TMAgenda();
        this.tblAgenda.setModel(tmAgendamentos);
        this.carregarArquivo("src/csv/lst_agendamentos.csv");
    }

    public Agenda getAgendamentoSelecionado() {
        return agendamentoSelecionado;
    }

    public void setAgendamentoSelecionado(Agenda agendamentoSelecionado) {
        this.agendamentoSelecionado = agendamentoSelecionado;
    }

    public TMAgenda getTmAgendamentos() {
        return tmAgendamentos;
    }

    public void setTmAgendamentos(TMAgenda tmAgendamentos) {
        this.tmAgendamentos = tmAgendamentos;
    }

    public int getIndiceSelecionado() {
        return indiceSelecionado;
    }

    public void setIndiceSelecionado(int indiceSelecionado) {
        this.indiceSelecionado = indiceSelecionado;
    }
    
    public void carregarArquivo(String caminho){
        
        FileReader arquivo;
        try {
            arquivo = new FileReader(caminho);
            Scanner ler = new Scanner(arquivo);
            ler.useDelimiter("\n");
            ler.next();
            
            while(ler.hasNext()){
                
                String linhaCsv = ler.next();
                Agenda a = new Agenda();
                a.setInfoCSV(linhaCsv);
                this.tmAgendamentos.addLinha(a);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ListaAgendamentos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "ERRO! Arquivo não foi carregado.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAgenda = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTitulo.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("LISTA DE PACIENTES CADASTRADOS NO SISTEMA");

        tblAgenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblAgenda.setToolTipText("Clique duas vezes no paciente desejado para selecioná-lo!");
        tblAgenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblAgendaMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblAgenda);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 976, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblAgendaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAgendaMouseReleased

        if (evt.getClickCount() == 2) {
            this.setIndiceSelecionado(this.tblAgenda.getSelectedRow());
            this.agendamentoSelecionado = this.getTmAgendamentos().getLstAgendamentos().get(this.getIndiceSelecionado());
            dispose();
        }
    }//GEN-LAST:event_tblAgendaMouseReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblAgenda;
    // End of variables declaration//GEN-END:variables
}
